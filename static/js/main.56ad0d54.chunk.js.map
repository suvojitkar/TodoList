{"version":3,"sources":["redux-mgmt/actions.js","components/Listitems/Listitems.js","components/Footer/Footer.js","assets/logo.gif","App.js","reportWebVitals.js","redux-mgmt/appState.js","redux-mgmt/reducers.js","index.js"],"names":["CHANGE_DEV","Listitems","props","listItems","items","todoItems","slice","reverse","map","Card","className","Body","Row","Col","xs","text","onClick","DeleteTask","key","duration","easing","Footer","App","state","currentTask","taskInputHandler","bind","$event","this","setState","target","value","src","logo","alt","width","height","id","type","placeholder","onChange","autoComplete","AddTask","Component","connect","developer","Developer","dispatch","changeDeveloper","name","fetch","then","res","json","resp2","info","payload","stateRef","task","console","log","createdAt","Date","getTime","addtask","alert","taskId","deletetask","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","appState","currentTodoItem","ADD_TASK","DELETE_TASK","reducer","initialState","action","concat","afterDeleteItems","filter","tasks","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","Mystore","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.56ad0d54.chunk.js","sourcesContent":["/*\nAction defines which reducer is to be used\n*/\n\n// Action Types\nconst CHANGE_DEV = 'CHANGE_DEV';\nconst ADD_TASK = 'ADD_TASK';\nconst DELETE_TASK = 'DELETE_TASK';\n\n// Action Creater\nconst testDevName = (name) => {\n    return {\n        type: CHANGE_DEV,\n        info: 'This action is used to change developer name',\n        payload: name\n    }\n}\n\nexport const addtask = (task) => {\n    console.log('Lets make a action object for adding the task:', task);\n    return {\n        type: ADD_TASK,\n        info: 'This action is used to add new task',\n        payload: task,\n        createdAt: new Date().getTime()\n    }\n}\n\nexport const deletetask = (taskId) => {\n    console.log('Lets make a action object for deleting the task:', taskId);\n    return {\n        type: DELETE_TASK,\n        info: 'This action is used to Delete task',\n        payload: taskId\n    }\n}\n\nexport const changeDevName = (name) => {\n    return (dispatch) => {\n        fetch('https://jsonplaceholder.typicode.com/users')\n        .then(res=>res.json())\n        .then(resp2 => {\n            dispatch({\n                type: CHANGE_DEV,\n                info: 'This action is  used to change developer name',\n                payload: resp2[0].name\n            });\n        })\n    }\n}\n\n// export default { addtask, changeDevName }","import React from 'react'\nimport FlipMove from 'react-flip-move';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { Trash } from 'react-bootstrap-icons';\n\nfunction Listitems(props) {\n    const listItems = props.items.todoItems.slice(0).reverse().map(items => {\n        return <Card className=\"listTask\" key={ items.key }>\n            <Card.Body className=\"taskText\">\n                <Row>\n                    <Col xs={10}>{items.text}</Col>\n                    <Col xs={1} className=\"userIcon\" onClick={() => props.items.DeleteTask(items.key)} ><Trash/></Col>\n                    <Col xs={1}></Col>\n                </Row>\n            </Card.Body>\n        </Card>\n    });\n\n    return (\n        <div>\n            <FlipMove duration={300} easing=\"ease-in-out\">\n                {listItems}\n            </FlipMove>\n        </div>\n    )\n}\n\nexport default Listitems;\n","import React from 'react'\n\nfunction Footer() {\n    return (\n        <div className=\"footer\">\n            <p>Developed by: @suvojitKar</p>\n        </div>\n    )\n}\n\nexport default Footer;\n","export default __webpack_public_path__ + \"static/media/logo.706c380c.gif\";","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { addtask, deletetask, changeDevName } from './redux-mgmt/actions';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nimport Listitems from './components/Listitems/Listitems';\nimport './components/Listitems/Listitems.css';\nimport Footer from './components/Footer/Footer';\nimport './components/Footer/Footer.css';\n\nimport logo from './assets/logo.gif';\n\nexport class App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentTask: ''\n    }\n    this.taskInputHandler = this.taskInputHandler.bind(this);\n  } \n\n  taskInputHandler($event) {\n    this.setState({\n      currentTask: $event.target.value\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <br/>\n        <center>\n          <h1 className=\"projectHeader\"> TaskList </h1>\n          <img src={logo} alt=\"logo\" width=\"100\" height=\"100\"></img>\n        </center>\n\n        <div id=\"add-task-bar\" className=\"App\">\n          <input type=\"text\" id=\"currentTask\" placeholder=\"Enter a task\" value={ this.state.currentTask} onChange={ this.taskInputHandler} autoComplete=\"off\"></input>\n          <button onClick={() => { this.props.AddTask(this, this.state.currentTask) }}> Add</button>\n          \n          <div className=\"listComponent\">\n            <Listitems items={this.props}></Listitems>\n          </div>\n        </div>\n        <Footer></Footer>\n      </div>\n    )\n  }\n}\n\n// create props from global state variable\nconst mapStateToProps = (state) => {\n  return {\n    todoItems: state.todoItems,\n    developer: state.Developer\n  }\n}\n\n// create props for actions\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    changeDeveloper: (name) => {\n      dispatch(changeDevName(name));\n    },\n    AddTask: (stateRef, task) => {\n      stateRef.setState({\n        currentTask: ''\n      });\n      if (task !== \"\") {\n        console.log('User action indicates to dispatch an action to add items:', task);\n        dispatch(addtask(task));\n      } else {\n        alert('Task cannot be empty');\n      }\n    },\n    DeleteTask: (taskId) => {\n      console.log('User action indicates to dispatch an action to delete items:', taskId);\n      dispatch(deletetask(taskId));\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const appState = {\n    todoItems: [],\n    currentTodoItem: {\n        text: '',\n        key: ''\n    },\n    Developer: 'suvojit'\n}\n\nexport default appState;","import initialState from './appState';\n\n/*\nApp do not change the store data directly\nReducer function is used to change store data\n*/\n\n// App Reducer\nconst CHANGE_DEV = 'CHANGE_DEV';\nconst ADD_TASK = 'ADD_TASK';\nconst DELETE_TASK = 'DELETE_TASK';\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case CHANGE_DEV:\n            return {\n                ...state,\n                Developer: action.payload\n            }\n        case ADD_TASK:\n            console.log('Let the reducer deal with global state based on action type:', ADD_TASK);\n            return {\n                ...state,\n                todoItems: state.todoItems.concat({ text: action.payload, key: action.createdAt})\n            }\n        case DELETE_TASK:\n            console.log('Let the reducer deal with global state based on action type:', DELETE_TASK);\n            let afterDeleteItems = state.todoItems.filter(tasks => tasks.key !== action.payload);\n            return {\n                ...state,\n                todoItems: afterDeleteItems\n            }\n        default: return state\n    }\n}\n\nexport default reducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\n\nimport reducer from './redux-mgmt/reducers';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n// store cration\nconst Mystore = createStore(reducer, composeEnhancers(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={Mystore}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}